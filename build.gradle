plugins {
	id "java"
	id "fabric-loom" version "0.8.12" apply false
	id "maven-publish"
}

apply plugin: "fabric-loom"

if(rootProject.file("private.gradle").exists()) { //Publishing details
	apply from: "private.gradle"
}

def getSubprojectVersion(project) {
	return "${project.mod_version}"
}

dependencies {
	implementation project(":schluessel")
	implementation project(":schluessel-impl")
	
	implementation project(":naturverbunden-core")
	implementation project(":naturverbunden-terrain-core")
	implementation project(":naturverbunden-health")
	implementation project(":naturverbunden-progression")
	implementation project(":naturverbunden-biomes")
	implementation project(":naturverbunden-terrain")
	
	afterEvaluate {
		include project(":schluessel")
		include project(":schluessel-impl")
		
		include project(":naturverbunden-core")
		include project(":naturverbunden-terrain-core")
		include project(":naturverbunden-health")
		include project(":naturverbunden-progression")
		include project(":naturverbunden-biomes")
		include project(":naturverbunden-terrain")
	}
}

allprojects {
	apply plugin: "java"
	apply plugin: "fabric-loom"

	archivesBaseName = "${project.archives_base_name}"
	group = "${project.maven_group}"
	version = "${project.mod_version}+${project.minecraft_version}"

	tasks.withType(JavaCompile).configureEach {
		it.options.encoding = "UTF-8"
		it.options.release = 16
	}

	repositories {
		maven { url "https://server.bbkr.space/artifactory/libs-release" } // Cotton maven - home of Cotton projects
		maven { url "https://maven.abusedmaster.xyz" } // NerdHub maven
		maven {
			name = "Onyx Studios"
			url = "https://maven.onyxstudios.dev"
		}
		maven { url 'https://jitpack.io' }
		maven {
			name = 'HalfOf2'
			url = 'https://storage.googleapis.com/devan-maven/'
		}
		maven {
			name = "Devan-Kerman/Devan-Repo"
			url = "https://raw.githubusercontent.com/Devan-Kerman/Devan-Repo/master/"
		}
	}

	dependencies {
		minecraft "com.mojang:minecraft:${project.minecraft_version}"
		mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_build}:v2"
		modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
		modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

		compileOnly "com.google.code.findbugs:jsr305:3.0.2"
	}

	processResources {
		inputs.property "version", project.version
		from(sourceSets.main.resources.srcDirs) {
			include "fabric.mod.json"
			expand version: project.version
		}
		from(sourceSets.main.resources.srcDirs) {
			exclude "fabric.mod.json"
		}
	}

	task sourcesJar(type: Jar, dependsOn: classes) {
		archiveClassifier = "sources"
		from sourceSets.main.allSource
	}

	jar {
		from "LICENSE"
	}
	
	/*loom {
		shareCaches = true
	}*/
}

subprojects.each { remapJar.dependsOn("${it.path}:remapJar") }

// configure the maven publication
publishing {
	publications {
		maven(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				classifier null
				builtBy remapJar
			}

			/*artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}-dev.jar") { //release jar - file location not provided anywhere in loom
				classifier "dev"
				builtBy remapJar
			}*/

			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
